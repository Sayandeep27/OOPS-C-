#include <bits/stdc++.h>
using namespace std;

class Base{
  public:
    
    void display()
    {
        cout<<"I am from Base class"<<endl;
    }
    
};


class Derived:public Base{
  
  public:
  
     void display()
     {
         cout<<"I am from Derived class"<<endl;
     }
    
    
};

int main()
{
    
    Derived d1,d2;
    Base b1;
    
    b1.display();  // I am from base class
    
    d1.display();    // I am from derived class
    d1.Base::display();  // I am from base class 

    
    
    

    return 0;
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <bits/stdc++.h>

using namespace std;


class Person{
    
  public: 
  
  
     void display()
     {
         cout<<"I am a Person"<<endl;
     }
    
    
    
    
};



class Student : public Person{
    
  public:
  
     void display()
     {
         cout<<"I am a Student"<<endl;
     }
    
    
};




class Teacher : public Person{
  
  public:
  
    void display()
    {
        cout<<"I am a Teacher"<<endl;
    }
    
    
};


int main()
{
    // Function overriding - Runtime polymorphism
    Person p;
    Student s;
    Teacher t;
    
    p.display();
    s.display();
    t.display();
    
    

    return 0;
}
